/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Distributed-Cloud-Physical-Server
 * 分布式云物理服务器操作相关的接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.edcps.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.common.model.Filter;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 批量查询分布式云物理服务器详细信息&lt;br/&gt;
支持分页查询，默认每页20条&lt;br/&gt;

 */
public class DescribeInstancesRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 页码；默认为1
     */
    private Integer pageNumber;

    /**
     * 分页大小；默认为20；取值范围[20, 100]
     */
    private Integer pageSize;

    /**
     * 可用区，精确匹配
     */
    private String az;

    /**
     * 分布式云物理服务器名称，支持模糊匹配
     */
    private String name;

    /**
     * 网络类型，精确匹配，支持vpc
     */
    private String networkType;

    /**
     * 实例类型，精确匹配，调用接口（describeDeviceTypes）获取实例类型
     */
    private String deviceType;

    /**
     * 子网ID
     */
    private String subnetId;

    /**
     * 是否启用外网, yes/no
     */
    private String enableInternet;

    /**
     * 主网口内网ip
     */
    private String privateIp;

    /**
     * 辅网口内网ip
     */
    private String extensionPrivateIp;

    /**
     * 密钥对id
     */
    private String keypairId;

    /**
     * 网口模式 单网口:bond,双网口:dual
     */
    private String interfaceMode;

    /**
     * instanceId - 分布式云物理服务器ID，精确匹配，支持多个&lt;br/&gt;
status - 分布式云物理服务器状态，参考分布式云物理服务器状态，精确匹配，支持多个

     */
    private List<Filter> filters;

    /**
     * 地域ID，可调用接口（describeEdCPSRegions）获取分布式云物理服务器支持的地域
     * Required:true
     */
    @Required
    private String regionId;


    /**
     * get 页码；默认为1
     *
     * @return
     */
    public Integer getPageNumber() {
        return pageNumber;
    }

    /**
     * set 页码；默认为1
     *
     * @param pageNumber
     */
    public void setPageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
    }

    /**
     * get 分页大小；默认为20；取值范围[20, 100]
     *
     * @return
     */
    public Integer getPageSize() {
        return pageSize;
    }

    /**
     * set 分页大小；默认为20；取值范围[20, 100]
     *
     * @param pageSize
     */
    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * get 可用区，精确匹配
     *
     * @return
     */
    public String getAz() {
        return az;
    }

    /**
     * set 可用区，精确匹配
     *
     * @param az
     */
    public void setAz(String az) {
        this.az = az;
    }

    /**
     * get 分布式云物理服务器名称，支持模糊匹配
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 分布式云物理服务器名称，支持模糊匹配
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 网络类型，精确匹配，支持vpc
     *
     * @return
     */
    public String getNetworkType() {
        return networkType;
    }

    /**
     * set 网络类型，精确匹配，支持vpc
     *
     * @param networkType
     */
    public void setNetworkType(String networkType) {
        this.networkType = networkType;
    }

    /**
     * get 实例类型，精确匹配，调用接口（describeDeviceTypes）获取实例类型
     *
     * @return
     */
    public String getDeviceType() {
        return deviceType;
    }

    /**
     * set 实例类型，精确匹配，调用接口（describeDeviceTypes）获取实例类型
     *
     * @param deviceType
     */
    public void setDeviceType(String deviceType) {
        this.deviceType = deviceType;
    }

    /**
     * get 子网ID
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网ID
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }

    /**
     * get 是否启用外网, yes/no
     *
     * @return
     */
    public String getEnableInternet() {
        return enableInternet;
    }

    /**
     * set 是否启用外网, yes/no
     *
     * @param enableInternet
     */
    public void setEnableInternet(String enableInternet) {
        this.enableInternet = enableInternet;
    }

    /**
     * get 主网口内网ip
     *
     * @return
     */
    public String getPrivateIp() {
        return privateIp;
    }

    /**
     * set 主网口内网ip
     *
     * @param privateIp
     */
    public void setPrivateIp(String privateIp) {
        this.privateIp = privateIp;
    }

    /**
     * get 辅网口内网ip
     *
     * @return
     */
    public String getExtensionPrivateIp() {
        return extensionPrivateIp;
    }

    /**
     * set 辅网口内网ip
     *
     * @param extensionPrivateIp
     */
    public void setExtensionPrivateIp(String extensionPrivateIp) {
        this.extensionPrivateIp = extensionPrivateIp;
    }

    /**
     * get 密钥对id
     *
     * @return
     */
    public String getKeypairId() {
        return keypairId;
    }

    /**
     * set 密钥对id
     *
     * @param keypairId
     */
    public void setKeypairId(String keypairId) {
        this.keypairId = keypairId;
    }

    /**
     * get 网口模式 单网口:bond,双网口:dual
     *
     * @return
     */
    public String getInterfaceMode() {
        return interfaceMode;
    }

    /**
     * set 网口模式 单网口:bond,双网口:dual
     *
     * @param interfaceMode
     */
    public void setInterfaceMode(String interfaceMode) {
        this.interfaceMode = interfaceMode;
    }

    /**
     * get instanceId - 分布式云物理服务器ID，精确匹配，支持多个&lt;br/&gt;
status - 分布式云物理服务器状态，参考分布式云物理服务器状态，精确匹配，支持多个

     *
     * @return
     */
    public List<Filter> getFilters() {
        return filters;
    }

    /**
     * set instanceId - 分布式云物理服务器ID，精确匹配，支持多个&lt;br/&gt;
status - 分布式云物理服务器状态，参考分布式云物理服务器状态，精确匹配，支持多个

     *
     * @param filters
     */
    public void setFilters(List<Filter> filters) {
        this.filters = filters;
    }

    /**
     * get 地域ID，可调用接口（describeEdCPSRegions）获取分布式云物理服务器支持的地域
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID，可调用接口（describeEdCPSRegions）获取分布式云物理服务器支持的地域
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * set 页码；默认为1
     *
     * @param pageNumber
     */
    public DescribeInstancesRequest pageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }

    /**
     * set 分页大小；默认为20；取值范围[20, 100]
     *
     * @param pageSize
     */
    public DescribeInstancesRequest pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    /**
     * set 可用区，精确匹配
     *
     * @param az
     */
    public DescribeInstancesRequest az(String az) {
        this.az = az;
        return this;
    }

    /**
     * set 分布式云物理服务器名称，支持模糊匹配
     *
     * @param name
     */
    public DescribeInstancesRequest name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 网络类型，精确匹配，支持vpc
     *
     * @param networkType
     */
    public DescribeInstancesRequest networkType(String networkType) {
        this.networkType = networkType;
        return this;
    }

    /**
     * set 实例类型，精确匹配，调用接口（describeDeviceTypes）获取实例类型
     *
     * @param deviceType
     */
    public DescribeInstancesRequest deviceType(String deviceType) {
        this.deviceType = deviceType;
        return this;
    }

    /**
     * set 子网ID
     *
     * @param subnetId
     */
    public DescribeInstancesRequest subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * set 是否启用外网, yes/no
     *
     * @param enableInternet
     */
    public DescribeInstancesRequest enableInternet(String enableInternet) {
        this.enableInternet = enableInternet;
        return this;
    }

    /**
     * set 主网口内网ip
     *
     * @param privateIp
     */
    public DescribeInstancesRequest privateIp(String privateIp) {
        this.privateIp = privateIp;
        return this;
    }

    /**
     * set 辅网口内网ip
     *
     * @param extensionPrivateIp
     */
    public DescribeInstancesRequest extensionPrivateIp(String extensionPrivateIp) {
        this.extensionPrivateIp = extensionPrivateIp;
        return this;
    }

    /**
     * set 密钥对id
     *
     * @param keypairId
     */
    public DescribeInstancesRequest keypairId(String keypairId) {
        this.keypairId = keypairId;
        return this;
    }

    /**
     * set 网口模式 单网口:bond,双网口:dual
     *
     * @param interfaceMode
     */
    public DescribeInstancesRequest interfaceMode(String interfaceMode) {
        this.interfaceMode = interfaceMode;
        return this;
    }

    /**
     * set instanceId - 分布式云物理服务器ID，精确匹配，支持多个&lt;br/&gt;
status - 分布式云物理服务器状态，参考分布式云物理服务器状态，精确匹配，支持多个

     *
     * @param filters
     */
    public DescribeInstancesRequest filters(List<Filter> filters) {
        this.filters = filters;
        return this;
    }

    /**
     * set 地域ID，可调用接口（describeEdCPSRegions）获取分布式云物理服务器支持的地域
     *
     * @param regionId
     */
    public DescribeInstancesRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * add item to instanceId - 分布式云物理服务器ID，精确匹配，支持多个&lt;br/&gt;
status - 分布式云物理服务器状态，参考分布式云物理服务器状态，精确匹配，支持多个

     *
     * @param filter
     */
    public void addFilter(Filter filter) {
        if (this.filters == null) {
            this.filters = new ArrayList<>();
        }
        this.filters.add(filter);
    }

}