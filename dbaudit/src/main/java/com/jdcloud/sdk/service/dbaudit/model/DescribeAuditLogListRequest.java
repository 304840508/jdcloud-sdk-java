/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Audit Log Interface
 * Audit Log Interface
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dbaudit.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 获取审计日志列表
时间范围[0-180天]

 */
public class DescribeAuditLogListRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 页码；默认为1
     */
    private Integer pageNumber;

    /**
     * 分页大小；默认为10；取值范围[10, 100]
     */
    private Integer pageSize;

    /**
     * 按照时间范围过滤，开始时间
     */
    private String startTime;

    /**
     * 按照时间范围过滤，结束时间
     */
    private String endTime;

    /**
     * 按照数据库Id过滤
     */
    private String dbId;

    /**
     * 按照风险级别过滤: 0-&gt;无风险，1-&gt;低风险，2-&gt;中风险，3-&gt;高风险，4-&gt;致命风险，空字符串查询所有
     */
    private String riskLevel;

    /**
     * 地域 Id
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * 审计实例ID
     * Required:true
     */
    @Required
    private String insId;


    /**
     * get 页码；默认为1
     *
     * @return
     */
    public Integer getPageNumber() {
        return pageNumber;
    }

    /**
     * set 页码；默认为1
     *
     * @param pageNumber
     */
    public void setPageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
    }

    /**
     * get 分页大小；默认为10；取值范围[10, 100]
     *
     * @return
     */
    public Integer getPageSize() {
        return pageSize;
    }

    /**
     * set 分页大小；默认为10；取值范围[10, 100]
     *
     * @param pageSize
     */
    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * get 按照时间范围过滤，开始时间
     *
     * @return
     */
    public String getStartTime() {
        return startTime;
    }

    /**
     * set 按照时间范围过滤，开始时间
     *
     * @param startTime
     */
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    /**
     * get 按照时间范围过滤，结束时间
     *
     * @return
     */
    public String getEndTime() {
        return endTime;
    }

    /**
     * set 按照时间范围过滤，结束时间
     *
     * @param endTime
     */
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }

    /**
     * get 按照数据库Id过滤
     *
     * @return
     */
    public String getDbId() {
        return dbId;
    }

    /**
     * set 按照数据库Id过滤
     *
     * @param dbId
     */
    public void setDbId(String dbId) {
        this.dbId = dbId;
    }

    /**
     * get 按照风险级别过滤: 0-&gt;无风险，1-&gt;低风险，2-&gt;中风险，3-&gt;高风险，4-&gt;致命风险，空字符串查询所有
     *
     * @return
     */
    public String getRiskLevel() {
        return riskLevel;
    }

    /**
     * set 按照风险级别过滤: 0-&gt;无风险，1-&gt;低风险，2-&gt;中风险，3-&gt;高风险，4-&gt;致命风险，空字符串查询所有
     *
     * @param riskLevel
     */
    public void setRiskLevel(String riskLevel) {
        this.riskLevel = riskLevel;
    }

    /**
     * get 地域 Id
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }

    /**
     * get 审计实例ID
     *
     * @return
     */
    public String getInsId() {
        return insId;
    }

    /**
     * set 审计实例ID
     *
     * @param insId
     */
    public void setInsId(String insId) {
        this.insId = insId;
    }


    /**
     * set 页码；默认为1
     *
     * @param pageNumber
     */
    public DescribeAuditLogListRequest pageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }

    /**
     * set 分页大小；默认为10；取值范围[10, 100]
     *
     * @param pageSize
     */
    public DescribeAuditLogListRequest pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    /**
     * set 按照时间范围过滤，开始时间
     *
     * @param startTime
     */
    public DescribeAuditLogListRequest startTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * set 按照时间范围过滤，结束时间
     *
     * @param endTime
     */
    public DescribeAuditLogListRequest endTime(String endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * set 按照数据库Id过滤
     *
     * @param dbId
     */
    public DescribeAuditLogListRequest dbId(String dbId) {
        this.dbId = dbId;
        return this;
    }

    /**
     * set 按照风险级别过滤: 0-&gt;无风险，1-&gt;低风险，2-&gt;中风险，3-&gt;高风险，4-&gt;致命风险，空字符串查询所有
     *
     * @param riskLevel
     */
    public DescribeAuditLogListRequest riskLevel(String riskLevel) {
        this.riskLevel = riskLevel;
        return this;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public DescribeAuditLogListRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * set 审计实例ID
     *
     * @param insId
     */
    public DescribeAuditLogListRequest insId(String insId) {
        this.insId = insId;
        return this;
    }


}